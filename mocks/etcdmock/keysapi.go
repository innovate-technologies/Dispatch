// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/coreos/etcd/client (interfaces: KeysAPI)

package etcdmock

import (
	client "github.com/coreos/etcd/client"
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
)

// MockKeysAPI is a mock of KeysAPI interface
type MockKeysAPI struct {
	ctrl     *gomock.Controller
	recorder *MockKeysAPIMockRecorder
}

// MockKeysAPIMockRecorder is the mock recorder for MockKeysAPI
type MockKeysAPIMockRecorder struct {
	mock *MockKeysAPI
}

// NewMockKeysAPI creates a new mock instance
func NewMockKeysAPI(ctrl *gomock.Controller) *MockKeysAPI {
	mock := &MockKeysAPI{ctrl: ctrl}
	mock.recorder = &MockKeysAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockKeysAPI) EXPECT() *MockKeysAPIMockRecorder {
	return _m.recorder
}

// Create mocks base method
func (_m *MockKeysAPI) Create(_param0 context.Context, _param1 string, _param2 string) (*client.Response, error) {
	ret := _m.ctrl.Call(_m, "Create", _param0, _param1, _param2)
	ret0, _ := ret[0].(*client.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (_mr *MockKeysAPIMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Create", arg0, arg1, arg2)
}

// CreateInOrder mocks base method
func (_m *MockKeysAPI) CreateInOrder(_param0 context.Context, _param1 string, _param2 string, _param3 *client.CreateInOrderOptions) (*client.Response, error) {
	ret := _m.ctrl.Call(_m, "CreateInOrder", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(*client.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInOrder indicates an expected call of CreateInOrder
func (_mr *MockKeysAPIMockRecorder) CreateInOrder(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateInOrder", arg0, arg1, arg2, arg3)
}

// Delete mocks base method
func (_m *MockKeysAPI) Delete(_param0 context.Context, _param1 string, _param2 *client.DeleteOptions) (*client.Response, error) {
	ret := _m.ctrl.Call(_m, "Delete", _param0, _param1, _param2)
	ret0, _ := ret[0].(*client.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete
func (_mr *MockKeysAPIMockRecorder) Delete(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0, arg1, arg2)
}

// Get mocks base method
func (_m *MockKeysAPI) Get(_param0 context.Context, _param1 string, _param2 *client.GetOptions) (*client.Response, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0, _param1, _param2)
	ret0, _ := ret[0].(*client.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (_mr *MockKeysAPIMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0, arg1, arg2)
}

// Set mocks base method
func (_m *MockKeysAPI) Set(_param0 context.Context, _param1 string, _param2 string, _param3 *client.SetOptions) (*client.Response, error) {
	ret := _m.ctrl.Call(_m, "Set", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(*client.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Set indicates an expected call of Set
func (_mr *MockKeysAPIMockRecorder) Set(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Set", arg0, arg1, arg2, arg3)
}

// Update mocks base method
func (_m *MockKeysAPI) Update(_param0 context.Context, _param1 string, _param2 string) (*client.Response, error) {
	ret := _m.ctrl.Call(_m, "Update", _param0, _param1, _param2)
	ret0, _ := ret[0].(*client.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (_mr *MockKeysAPIMockRecorder) Update(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Update", arg0, arg1, arg2)
}

// Watcher mocks base method
func (_m *MockKeysAPI) Watcher(_param0 string, _param1 *client.WatcherOptions) client.Watcher {
	ret := _m.ctrl.Call(_m, "Watcher", _param0, _param1)
	ret0, _ := ret[0].(client.Watcher)
	return ret0
}

// Watcher indicates an expected call of Watcher
func (_mr *MockKeysAPIMockRecorder) Watcher(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Watcher", arg0, arg1)
}
